# ~/.config/git/config: user-global git config
# see git(1) git-config(1)

[advice]
  pushUpdateRejected

[color]
  ui = auto

[color "decorate"]
  branch = green
  remoteBranch = red
  stash = blue
  tag = yellow

[color "diff"]
  meta = white bold
  frag = cyan bold
  old = red bold
  new = green bold

[core]
  editor = vim
  excludesfile = ~/.gitignore
  attributesfile = ~/.gitattributes
  ignorecase = false
  compression = 0

[credential]
  helper = cache --timeout 3600

[init]
  defaultBranch = main
  # templateDir = ~/.local/share/git/templates

[user]
  # email =
  name = Patrick DeYoreo

[push]
  default = current
  autoSetupRemote = true

[pull]
  rebase = false

[protocol "file"]
  allow = always

[alias]
  a = add
  b = branch
  c = commit
  co = checkout
  cob = checkout -b
  m = merge
  mc = merge --continue
  r = reset HEAD
  s = status -sb   # Short status with current branch
  sw = switch      # Change branch
  swc = switch -c  # Create new branch

  # Commits log with pretty format
  l = log --all --graph --decorate --oneline

  # Fully commits log with statistic
  ll = log --stat --abbrev-commit

  # List of contributors and how many commits each person has
  contrib = shortlog -sn

  # When doing "git git log" or some such, do not complain about "git"
  git = !git

  # Checkout to the latest
  main = "!sh -c 'git checkout main && git pull --prune' --"
  master = "!sh -c 'git checkout master && git pull --prune' --"
  develop = "!sh -c 'git checkout develop && git pull --prune' --"

  # Merge latest master/main to current branch
  synclocal = "!sh -c 'if test \"$#\" -gt 0; then git fetch origin \"$1:$1\" && git merge; else >&2 echo '\\''usage: git synclocal BRANCH'\\''; exit 1; fi' --"

  # Initialize, add all files and commit
  new = "!sh -c 'git init && git add . && git commit -m '\\''Initial commit'\\''' --"

  # Ammend last commit with its original message
  amend = "!sh -c 'git log -n 1 --pretty=tformat:%s%n%n%b | git commit -F - --amend' --"

  # Append file to .gitignore
  ignore = "!sh -c 'test -e .gitignore && >> .gitignore echo || touch .gitignore && >> .gitignore printf '\\''%s\\n'\\'' \"$@\"' --"

  # Pull data from remote and push local data
  sync = "!sh -x -c 'git pull && git push' --"

  # Lazygit
  lazy = "!lazygit"
